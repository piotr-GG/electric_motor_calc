# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from results_tab import CalcResultsWidget
from motor_calc import MotorCalc
from motor import Motor
from motor_results import MotorResults
from gui.auxiliary.calculation_matplotlib import  CalculateMatplotlib
from utils import Utils


class UiMainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 400)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(450, 400))
        MainWindow.setMaximumSize(QtCore.QSize(600, 400))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(240, 20, 81, 117))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(7)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.ks_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.ks_val_qle.setObjectName("ks_val_qle")
        self.horizontalLayout.addWidget(self.ks_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.kr_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.kr_val_qle.setObjectName("kr_val_qle")
        self.horizontalLayout_2.addWidget(self.kr_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.gs_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.gs_val_qle.setObjectName("gs_val_qle")
        self.horizontalLayout_3.addWidget(self.gs_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_4.addWidget(self.label_4)
        self.gr_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.gr_val_qle.setObjectName("gr_val_qle")
        self.horizontalLayout_4.addWidget(self.gr_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.calculate_pbtn = QtWidgets.QPushButton(self.centralwidget)
        self.calculate_pbtn.setGeometry(QtCore.QRect(200, 151, 161, 41))
        self.calculate_pbtn.setObjectName("calculate_pbtn")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(100, 200, 401, 161))
        self.groupBox.setObjectName("groupBox")
        self.limit_lower_qle = QtWidgets.QLineEdit(self.groupBox)
        self.limit_lower_qle.setGeometry(QtCore.QRect(100, 60, 61, 20))
        self.limit_lower_qle.setObjectName("limit_lower_qle")
        self.limit_upper_qle = QtWidgets.QLineEdit(self.groupBox)
        self.limit_upper_qle.setGeometry(QtCore.QRect(220, 60, 61, 21))
        self.limit_upper_qle.setObjectName("limit_upper_qle")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(160, 20, 61, 21))
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(40, 60, 61, 21))
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(160, 60, 61, 21))
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.matplotlib_btn = QtWidgets.QPushButton(self.groupBox)
        self.matplotlib_btn.setGeometry(QtCore.QRect(120, 100, 121, 41))
        self.matplotlib_btn.setObjectName("matplotlib_btn")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 21))
        self.menubar.setObjectName("menubar")
        self.menuZamknij = QtWidgets.QMenu(self.menubar)
        self.menuZamknij.setObjectName("menuZamknij")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOtw_rz = QtWidgets.QAction(MainWindow)
        self.actionOtw_rz.setObjectName("actionOtw_rz")
        self.menuZamknij.addAction(self.actionOtw_rz)
        self.menubar.addAction(self.menuZamknij.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # Setup custom variables and attributes
        self.customSetup()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Obliczanie strat dodatkowych silnika"))
        self.centralwidget.setWhatsThis(
            _translate("MainWindow", "<html><head/><body><p>Co to jest??!!!!</p></body></html>"))
        self.label.setText(_translate("MainWindow", "ks"))
        self.label_2.setText(_translate("MainWindow", "kr"))
        self.label_3.setText(_translate("MainWindow", "gs"))
        self.label_4.setText(_translate("MainWindow", "gr"))
        self.calculate_pbtn.setText(_translate("MainWindow", "Wykonaj obliczenia"))
        self.groupBox.setTitle(_translate("MainWindow", "Badanie wpływu zakresu harmonicznych na straty"))
        self.label_5.setText(_translate("MainWindow", "Limit"))
        self.label_6.setText(_translate("MainWindow", "min"))
        self.label_7.setText(_translate("MainWindow", "max"))
        self.matplotlib_btn.setText(_translate("MainWindow", "Zbadaj wpływ"))
        self.menuZamknij.setTitle(_translate("MainWindow", "Opcje"))
        self.actionOtw_rz.setText(_translate("MainWindow", "Otwórz"))

    def customSetup(self):
        self.ks_val_qle.setText("5")
        self.kr_val_qle.setText("5")
        self.gs_val_qle.setText("5")
        self.gr_val_qle.setText("5")

        self.calculate_pbtn.clicked.connect(self.runCalculations)

        self.matplotlib_btn.clicked.connect(self.runMatplotlib)
        self.calc_tab = None
        self.results_tab = None

    def runMatplotlib(self):
        limit_lower = int(self.limit_lower_qle.text())
        limit_upper = int(self.limit_upper_qle.text())
        test_motor = Motor()
        self.matplotlib_obj = CalculateMatplotlib(limit_lower, limit_upper, test_motor)
        self.matplotlib_obj.calculate_losses()
        self.matplotlib_obj.plot_losses()

    def runCalculations(self):
        input_vals = self.validateLimitVals()
        if len(input_vals) == 4:
            ks, kr, gs, gr = input_vals

            test_motor = Motor()
            motor_calc = MotorCalc(test_motor, limit=0, kls=ks, klr=kr, gs=gs, gr=gr)
            motor_calc.calculate()
            motor_results = MotorResults(motor_calc)

            self.results_tab = CalcResultsWidget(motor_results)
            self.results_tab.show()

            print(motor_results)
        else:
            print("Nie weszło!")

    def validateLimitVals(self) -> tuple:
        ks = int(self.ks_val_qle.text())
        kr = int(self.kr_val_qle.text())
        gs = int(self.gs_val_qle.text())
        gr = int(self.gr_val_qle.text())

        if ks <= 0:
            type(self).showErrorBox("Błędna wartość", "ks mniejsze bądź równe 0")
            return tuple()
        if kr <= 0:
            type(self).showErrorBox("Błędna wartość", "kr mniejsze bądź równe 0")
            return tuple()
        if gs <= 0:
            type(self).showErrorBox("Błędna wartość", "gs mniejsze bądź równe 0")
            return tuple()
        if gr <= 0:
            type(self).showErrorBox("Błędna wartość", "gr mniejsze bądź równe 0")
            return tuple()

        return ks, kr, gs, gr

    @staticmethod
    def showErrorBox(title: str, err_text: str):
        try:
            error_box = QMessageBox()
            error_box.setWindowTitle(title)
            error_box.setText(err_text)
            error_box.setIcon(QMessageBox.Warning)
            error_box.setStandardButtons(QMessageBox.Ok)
            x = error_box.exec_()
        except Exception as e:
            print(str(e))


if __name__ == "__main__":
    import sys

    sys.excepthook = Utils.excepthook_errormsg
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = UiMainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
