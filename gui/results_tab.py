# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'results_tab.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import Qt
from gui.CalcTabModel import CalcTabModel
from gui.LossesTabModel import LossesTabModel
from motor_results import MotorResults
from utils import Utils


class CalcResultsWidget(object):
    def __init__(self, motor_results: MotorResults):
        self.motor_results = motor_results

        self.Form = QtWidgets.QWidget()
        self.Form.setWindowModality(2)
        self.setupUi(self.Form)
        self.initVars()
        self.connectCustomSignals()
        self.fillQLineEdits()

    @property
    def motor_results(self):
        return self.__motor_results

    @motor_results.setter
    def motor_results(self, value):
        if isinstance(value, MotorResults):
            self.__motor_results = value
        else:
            raise ValueError("Argument given is not of MotorResult type")

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(640, 480)
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(40, 20, 101, 181))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(5)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setMinimumSize(QtCore.QSize(26, 0))
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_4.addWidget(self.label_4, 0, QtCore.Qt.AlignLeft)
        self.ps_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.ps_val_qle.setObjectName("ps_val_qle")
        self.horizontalLayout_4.addWidget(self.ps_val_qle, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setMinimumSize(QtCore.QSize(26, 0))
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.pal_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.pal_val_qle.setObjectName("pal_val_qle")
        self.horizontalLayout.addWidget(self.pal_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setMinimumSize(QtCore.QSize(26, 0))
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.pss_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.pss_val_qle.setObjectName("pss_val_qle")
        self.horizontalLayout_2.addWidget(self.pss_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_3.setMinimumSize(QtCore.QSize(26, 0))
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.pp_val_qle = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.pp_val_qle.setObjectName("pp_val_qle")
        self.horizontalLayout_3.addWidget(self.pp_val_qle)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.calc_tabview = QtWidgets.QTableView(Form)
        self.calc_tabview.setGeometry(QtCore.QRect(100, 200, 500, 150))
        self.calc_tabview.setObjectName("calc_tabview")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setGeometry(QtCore.QRect(380, 20, 161, 141))
        self.groupBox.setObjectName("groupBox")
        self.rotor_losses_rbtn = QtWidgets.QRadioButton(self.groupBox)
        self.rotor_losses_rbtn.setGeometry(QtCore.QRect(20, 100, 82, 17))
        self.rotor_losses_rbtn.setObjectName("Straty w wirniku")
        self.stator_losses_rbtn = QtWidgets.QRadioButton(self.groupBox)
        self.stator_losses_rbtn.setGeometry(QtCore.QRect(20, 80, 82, 17))
        self.stator_losses_rbtn.setObjectName("Straty w stojanie")
        self.stator_flux_d_rbtn = QtWidgets.QRadioButton(self.groupBox)
        self.stator_flux_d_rbtn.setGeometry(QtCore.QRect(20, 40, 101, 17))
        self.stator_flux_d_rbtn.setObjectName("stator_flux_d_rbtn")
        self.rotor_flux_d_rbtn = QtWidgets.QRadioButton(self.groupBox)
        self.rotor_flux_d_rbtn.setGeometry(QtCore.QRect(20, 60, 121, 17))
        self.rotor_flux_d_rbtn.setObjectName("rotor_flux_d_rbtn")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_4.setText(_translate("Form", "Ps"))
        self.label.setText(_translate("Form", "PAl"))
        self.label_2.setText(_translate("Form", "Pss"))
        self.label_3.setText(_translate("Form", "Pp"))
        self.groupBox.setTitle(_translate("Form", "Tabela"))
        self.rotor_losses_rbtn.setText(_translate("Form", "Straty w wirniku"))
        self.stator_losses_rbtn.setText(_translate("Form", "Straty w stojanie"))
        self.stator_flux_d_rbtn.setText(_translate("Form", "Indukcje stojana"))
        self.rotor_flux_d_rbtn.setText(_translate("Form", "Indukcje wirnika"))

    def show(self):
        self.Form.show()

    def initVars(self):
        self.activeState = ""

    def connectCustomSignals(self):
        self.rbtns = [self.stator_flux_d_rbtn, self.rotor_flux_d_rbtn, self.stator_losses_rbtn, self.rotor_losses_rbtn]
        for obj in self.rbtns:
            obj.clicked.connect(self.rbtns_toggled)

    def fillQLineEdits(self):
        self.pss_val_qle.setText(str(self.motor_results.motor_calc.Pss))
        self.pal_val_qle.setText(str(self.motor_results.motor_calc.PAl))
        self.pp_val_qle.setText(str(self.motor_results.motor_calc.Pp))
        self.ps_val_qle.setText(str(self.motor_results.motor_calc.Ps))

    def rbtns_toggled(self):
        if self.stator_flux_d_rbtn.isChecked() and self.activeState != "STATOR":
            print("Stojan!")
            self.activeState = "STATOR"
            self.show_stator_flux_d()
        elif self.rotor_flux_d_rbtn.isChecked() and self.activeState != "ROTOR":
            print("Wirnik!")
            self.activeState = "ROTOR"
            self.show_rotor_flux_d()
        elif self.stator_losses_rbtn.isChecked() and self.activeState != "STATOR_LOSSES":
            print("Straty w stojanie!")
            self.activeState = "STATOR_LOSSES"
            self.show_stator_losses()
        elif self.rotor_losses_rbtn.isChecked() and self.activeState != "ROTOR_LOSSES":
            print("Straty w wirniku!")
            self.activeState = "ROTOR_LOSSES"
            self.show_rotor_losses()

    def show_stator_flux_d(self):
        self.data = self.motor_results.motor_calc.stator_fluxes()
        self.header = ["vs", "Bvs"]
        self.model = CalcTabModel(self.data, None, self.header)
        self.calc_tabview.setModel(self.model)
        # self.calc_tabview.adjustSize()

        # self.hheader = self.calc_tabview.horizontalHeader()
        #
        # self.hheader.setDefaultSectionSize(60)
        # self.vheader = self.calc_tabview.verticalHeader()
        #
        # self.vheader.setDefaultSectionSize(30)
        # self.calc_tabview.setFixedHeight(100)
        # self.vheader.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        # self.vheader.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)

        # self.calc_tabview.update()
        self.setCellSizes()

    def show_rotor_flux_d(self):
        self.data = self.motor_results.motor_calc.rotor_fluxes()
        self.header = ["vr", "Bvr"]
        self.model = CalcTabModel(self.data, None, self.header)
        self.calc_tabview.setModel(self.model)
        self.setCellSizes()

    def show_stator_losses(self):

        self.data = self.motor_results.motor_calc.stator_losses()
        self.header = ["vs", "Psv", "PAlv"]
        self.model = LossesTabModel(self.data, self.header)
        self.calc_tabview.setModel(self.model)
        self.setCellSizes()

    def show_rotor_losses(self):
        self.data = self.motor_results.motor_calc.rotor_losses()
        self.header = ["vr", "Pssv", "Ppv"]
        self.model = LossesTabModel(self.data, self.header)
        self.calc_tabview.setModel(self.model)
        self.setCellSizes()

    def setCellSizes(self):
        vheader = self.calc_tabview.verticalHeader()
        vheader.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        vheader.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)

        self.calc_tabview.setRowHeight(0, 30)
        self.calc_tabview.setRowHeight(1, 30)
        self.calc_tabview.setRowHeight(2, 30)
        self.calc_tabview.update()


if __name__ == "__main__":
    import sys

    sys.excepthook = Utils.excepthook_errormsg
    app = QtWidgets.QApplication(sys.argv)
    ui = CalcResultsWidget()
    ui.show()
    sys.exit(app.exec_())
